/* il faut importer le ou les fichiers css dans un autre fichier en PREMIER (sans compter les commentaires) */
@import url('./bootstrap-icons.css');
@import url('./LazenbyCompSmooth.css');

/*
Unités de tailles en CSS (en web)

Unités les plus souvent utilisées en web

px      =>  pixel il est possible de mesure avec des virgules, 23.8px)
em      =>  cadratin. Historiquement unité de mesure en print sur les presses.
            Le cadratin se calcul par rapport à la taille du parent
rem     =>  cadratin racine, lui se calculera toujours depuis la taille racine du cadratin, 
            - soit celle du navigateur 
            - soit celle surchargée dans le :root
%       =>  La taille définie en % se calcule par rapport à l'espace disponible autour de l'élément définie en %
vw & vh =>  vw : viewport width (largeur de la surface d'affichage de l'appareil)
            vh : viewport height ( hauteur d'affichage du l'appareil)
            50vh => 50% de la taille d'affichage du l'appareil
            si la largeur d'affichage du site 360px (100vw)
            50vw = 180px
*/

/* déclarations générales */
/* Emplacement du root : déclarations de surcharge de la feuille de style user agent */
:root{
    font-family: Arial, Helvetica, sans-serif;
    /* il est possible d'utiliser ce qu'on appel des variables en css */
    --base-font-size: 1.2rem; /* sur chrome, 1rem de base c'est 16px, avec cette déclaration, je change le rem de base => (20%16px) => 19.2px */
    font-size: var(--base-font-size);
    --line-height: 1.6rem;
    line-height: var(--line-height);
    scroll-behavior: smooth;
}

*{
    box-sizing: border-box;
}

figure{
    background-color: #333;
    text-align: center;
    padding: 0.5rem;
}

figcaption{
    color: white;
    text-align: left;
}

/* formulaire */
form{
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
}

fieldset{
    border-radius: 0.2rem;
    /*border: 1px solid rgb(127.5,127.5,127.5);*/
    border-style: solid;
    border-width: 1px;
    border-color: rgb(127.5,127.5,127.5);
    box-shadow: 2px 2px 5px rgb(127.5,127.5,127.5);
    padding-block-start: 0.625rem;
    margin-top: 0.5rem;
    background-color: white;
}

legend{
    border-style: solid;
    border-width: 1px;
    border-color: rgb(127.5,127.5,127.5);
    border-radius: 0.2rem;
    background-color: white;
    padding-inline: 0.25rem;
}

input:invalid{
    border: 2px solid red;
}

input:valid{
    border-color: green;
}

input[type="text"],
input[type="email"],
input[type="number"]
{
    border-radius: 0.2rem;
    border-style: solid;
    font-size: 1rem;
    line-height: var(--line-height);
}

select{
    height: var(--line-height);
    font-size: 1rem;
    border-radius: 0.2rem;
}

form textarea{
    width: 100%;
    height: 25vh;
}

/* déclarations classes et id */
#exemple-de-tableau,
#tableau-simple {
  border-collapse: collapse;
}

#exemple-de-tableau td,
#exemple-de-tableau th,
#tableau-simple td,
#tableau-simple th {
  border: 1px solid black;
}

.danger {
  color: darkorange;
  font-family: Impact;
  background-color: black;
}

.go-top{
    background-color: rgba(0, 0, 0, 0.5);
    position: fixed;
    right: 0.5rem;
    bottom: 0.5rem;
    border-radius: 1.5rem;
    width: 3rem;
    height: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    /*
    padding-top: 1em;
    padding-right: 0.5em;
    padding-bottom: 1em;
    padding-left: 0.5em;
    */
}

.go-top a{
    color: rgba(255, 140, 0, 0.5);
    display: block;
    font-size: 2.5rem;
}

.go-top a:hover{
    color: darkorange;
}

.container{
    width: 100%;
    margin-left: auto;
    margin-right: auto;
}

.site-title{
    font-family: 'LazenbyCompSmooth';
    font-size: 1.7rem;
    line-height: 2.2rem;
    letter-spacing: 0.15rem;
}

.img-fluid{
    max-width: 100%;
}

.left{
    float: left;
    margin-right: 0.5rem;
}

.clear{
    clear: both;
}

.img-carre-150{
    width: 150px;
    height: 150px;
    /* l'objet à l'intérieur de la balise (généralement le fichier image appelé dans la balise img) sera contenu de trois façons dans l'espace réservé à la balise image (sa hauteur et sa largeur)
    fill => l'image est déformée en hauteur et en largeur pour recouvrir l'intégralité de l'espace
    contain => l'image est réduite en hauteur ou en largeur pour resté en homotétie mais des espaces libres apparaîtront sur ce qui n'est pas couvert par l'image
    cover => l'image sera réduite mais "rognée" par rapport à l'affichage de la balise img
    */
    object-fit: cover;
    /* object position : 
    par défaut si non indiqué après la déclaration de l'object fit : center center (centré horizontalement et verticalement)
    une valeur => change l'ohorizontal et vertical par defaut à center 
    deux valeurs => la première représente l'horizontale, la seconde la verticale
    */
    object-position: center center;
    background-color: #333;
}

.vignette{
    width: 150px;
    height: 150px;
    background-size: cover;
    background-position: center center;
}

.moto{
    background-image: url('../images/synthwave-vibe-james-white-signalnoise-w400.png');
}

.player{
    background-color: transparent;
    padding: 0;
    border: 0;
    color: white;
    font-size: 1.5rem;
    border-radius: 0.5rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
}

.player:hover{
    color: #333;
    background-color: white;    
}

.embed-media{
    position:relative;
    padding-bottom:56.25%;
    height:0;
    overflow:hidden;
}

.embed-media > *{
    width:100%; 
    height:100%; 
    position:absolute; 
    left:0px; 
    top:0px; 
    overflow:hidden; 
    border:none;
}

.media-16-9{
    padding-bottom: calc( 9 / 16 * 100% );
}

.media-21-9{
    padding-bottom: calc( 9 / 21 * 100% );
}

.media-4-3{
    padding-bottom: calc( 3 / 4 * 100% );
}

.media-21-297{
    padding-bottom: calc( 29.7 / 21 * 100% );
}

.media-297-21{
    padding-bottom: calc( 21 / 29.7 * 100% );
}



/* déclarations de structure */

body{
    margin: 0;
}

body > *{
    padding: 0 0.5rem;
}

body > header,
body > nav,
body > footer{
    background-color: #333;
    color: white;
}

body > header p{
    margin: 0;
}

body > nav ul{
    list-style-type: none;
    margin: 0;
    padding: 0;
}

body > nav ul li{
    border-bottom: 1px solid white;
}

body > nav ul li:last-child{
    border-bottom: none;
}

body > nav ul a{
    display: block;
}

body > nav ul a:hover,
body > nav ul a:focus-visible{
    background-color: white;
    color: #333;
    outline: none;
}

body > header a,
body > nav a,
body > footer a{
    color: white;
    text-decoration: none;
}



/* Déclaration CSS adaptatifs avec les media queries */

@media print{
    /* il faut se dire que le viewport d'un print est la page sur laquelle on imprime => si un élément doit apparaître en screen à 10px du haut du viewport, il apparaître sur toutes les pages (ou tous les viewports) qui s'imprimeront */
    @page {
        /* on force l'impression de la page en paysage */
        size: landscape;
        /* on ajoute à la page une marge intérieure de 1rem */
        padding: 1rem;
    }
    /* il s'agit du footer, de la nav et du header ayant comme parent direct la balise body */
    body > footer,
    body > nav,
    body > header,
    .go-top
    {
        display: none;
    }
}

@media screen and (min-width: 576px) {
    .container{
        width: 540px;
    }

    body > nav ul{
        display: flex;
        flex-wrap: wrap;
    }

    body > nav ul li{
        border-right: 1px solid white;
        border-bottom: unset;
    }
    
    body > nav ul li:last-child{
        border-right: none;
    }
    
    body > nav ul li a{
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }
}

@media screen and (min-width: 768px) {
    .container{
        width: 720px;
    }

    .site-title{
        font-size: 2rem;
    }

}

/*
Selon les points de ruptures calculés par bootstrap, écrire les media-queries manquantes pour la classe container
<576px	| ≥576px 	|≥768px 	|≥992px 	|≥1200px 	|≥1400px    |≥1600px
100%	| 540px	    |720px	    |960px	    |1140px		|1320px     |1560px
*/

@media screen and (min-width: 992px) {
    .container{
        width: 960px;
    }
}

@media screen and (min-width: 1200px) {
    .container{
        width: 1140px;
    }

    .site-title{
        font-size: 2.5rem;
        line-height: 3rem;
    }
}

@media screen and (min-width: 1400px) {
    .container{
        width: 1320px;
    }
}

@media screen and (min-width: 1600px) {
    .container{
        width: 1560px;
    }
}